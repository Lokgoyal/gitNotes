Git : It is a tool that exists on our computer system to track changes made into our respective project overtime.
Github: It is a cloud platform that hosts the file tracked by git on your local system with their associated changes overtime.

============Basic workflow of using a git system=================>
1. Init git at root directory of your project.
2. Add or modify files inside your project.
3. Add modified or new files to your git staging area.
4. Commit the files to git for snapshot, once they get finallized.


================== Remote Workflow===========================
Remote : Consider remote as the short name for remote repositories hosted on github inside your account. 
To connect git to github, we basically need remote repo url or link, so that we can tell git that it is our current project root on hosted platform.


============ Remote commands ================
Add
1. git remote add <repo nickname> <remote repo link> => To connect remote repo to our git, we assign the remote repo a nickname (origin as standard name but not necessary) and then we define the remote repo link to get it connected.
2. git remote rename <old nickname> <new nickname> => To rename current remote repo nickname to a new nickname.
3. git remote -v => To verify whether the remote you added does exist or not.

Remove
1. git remote remove <nickname of current remote> => To remove the current remote from your git system or to unlink your git from github repo.


Push or Pull from remote:
1. git clone <repo url> => This will clone the remote repo to your local system.
2. git push <remote repo nickname> <branch name inside remote repo> => This will push your local changes git changes to github remote repo under specified branch.
3. git push -u <remote repo nickname> <branch name inside remote repo> => To skip specifying remote repo and branch name everytime, we tells the git to set upstream (-u), meaning the changes commited after this command will be reflected under
repo name and branch name specified in the command. Helpful, when you are working on same repo and same branch for long time. After that, you don't need to specify repo and branch, just simply execute git push to push the changes remotely.

4. git pull <repo name> <branch name> => To sync your local repo with github repo. Meaning remote repo particular branch will be copied to local system.